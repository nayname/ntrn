To achieve the user's intent of opening an interchain account on the Cosmos Hub and delegating 500 ATOM from that account to a specific validator, we need to construct two messages based on the schema provided.

1. **Register an interchain account**: This requires sending an `ExecuteMsg` for registration with the appropriate connection ID and interchain account ID.

2. **Delegate tokens**: This involves sending an `ExecuteMsg` for delegation from the registered interchain account to the specified validator with the amount of 500 ATOM.

Here's how these messages would look following the given schemas:

### Message 1: Register Interchain Account

This message registers an interchain account.

```json
{
  "register": {
    "connection_id": "connection-id-to-cosmos-hub",
    "interchain_account_id": "unique-account-id"
  }
}
```

### Message 2: Delegate Tokens

This message delegates 500 ATOM to a specific validator.

```json
{
  "delegate": {
    "amount": "500",  // This should be wrapped in a `Uint128` JSON format
    "denom": "atom",
    "interchain_account_id": "unique-account-id",
    "validator": "cosmosvaloper1..."
  }
}
```

To execute these actions, you will need to replace placeholder values such as `"connection-id-to-cosmos-hub"`, `"unique-account-id"`, and `"cosmosvaloper1..."` with actual values that match your setup and target validator. The `amount` should be treated as a `Uint128` format based on the schema requirement that it is encoded as a string to handle large integers.